import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardRemove
import os
import time

TOKEN = ''
bot = telebot.TeleBot(TOKEN)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_records = {}  # –•—Ä–∞–Ω–∏—Ç –∑–∞–ø–∏—Å–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_last_message = {}  # –•—Ä–∞–Ω–∏—Ç ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
user_last_voice = {}  # –•—Ä–∞–Ω–∏—Ç ID –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
user_current_task = {}  # –•—Ä–∞–Ω–∏—Ç —Ç–µ–∫—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_waiting_for_action = {}  # –§–ª–∞–≥, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π, –æ–∂–∏–¥–∞–µ—Ç –ª–∏ –±–æ—Ç –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞—á–∞—Ç—å"
main_menu = ReplyKeyboardMarkup(resize_keyboard=True)
main_menu.add(KeyboardButton("–ù–∞—á–∞—Ç—å"))

SAVE_PATH = "/bot/voice_records"

# –ú–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π —Å –∑–∞–ø–∏—Å—å—é
action_menu = InlineKeyboardMarkup()
action_menu.add(InlineKeyboardButton("üîÑ –ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å", callback_data="re_record"))
action_menu.add(InlineKeyboardButton("‚û°Ô∏è –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∑–∞–¥–∞–Ω–∏—é", callback_data="next_task"))
action_menu.add(InlineKeyboardButton("üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å—ë –∏ –∑–∞–∫–æ–Ω—á–∏—Ç—å", callback_data="send"))
action_menu.add(InlineKeyboardButton("üîÑ –°–±—Ä–æ—Å", callback_data="reset"))  # –ù–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ "–°–±—Ä–æ—Å"

import random


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –∏–∑ —Ñ–∞–π–ª–∞ task.txt
def load_sentences_from_file(filename="task.txt"):
    try:
        with open(filename, "r", encoding="utf-8") as file:
            sentences = file.readlines()
        return [s.strip() for s in sentences if s.strip()]
    except FileNotFoundError:
        return ["–û—à–∏–±–∫–∞: —Ñ–∞–π–ª task.txt –Ω–µ –Ω–∞–π–¥–µ–Ω."]


# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –∑–∞–¥–∞–Ω–∏—è
def get_text_for_user(task_number):
    if task_number == 1:
        sentences = [
            "1) –ù–∞ –∫—É—Ö–Ω–µ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫.\n",
            "2) –ö–∞—Ç–µ –∫—É–ø–∏–ª–∏ —Ö–æ–º—è–∫–∞.\n",
            "3) –ú–∞—à–∏–Ω–∏—Å—Ç —Å–æ—à—ë–ª —Å –ø–æ–¥–Ω–æ–∂–∫–∏.\n",
            "4) –Ø—à–∞ –µ–ª —Å–ª–∞–¥–∫–∏–µ —è–±–ª–æ–∫–∏.\n",
            "5) –Å–∂–∏–∫ —É —ë–ª–∫–∏ –Ω–∞–∫–æ–ª–æ–ª –≥—Ä–∏–± –Ω–∞ –∏–≥–æ–ª–∫–∏.\n",
            "6) –î–µ—Ç–∏ —Å–ª–µ–ø–∏–ª–∏ —Å–Ω–µ–≥–æ–≤–∏–∫–∞.\n",
            "7) –ü–æ–≤–∞—Ä –ø–µ—á—ë—Ç –±–ª–∏–Ω—ã –Ω–∞ —Å–∫–æ–≤–æ—Ä–æ–¥–µ.\n",
            "8) –í –∞–∫–≤–∞—Ä–∏—É–º–µ –ø–ª–∞–≤–∞—é—Ç –∑–æ–ª–æ—Ç—ã–µ —Ä—ã–±–∫–∏.\n",
            "9) –í–æ–ª–æ—Å—ã –ø–æ–¥—Å—Ç—Ä–∏–≥–∞—é—Ç –≤ –ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–æ–π.\n",
            "10) –ú–∏–ª–∏—Ü–∏–æ–Ω–µ—Ä –µ–∑–¥–∏—Ç –Ω–∞ –º–æ—Ç–æ—Ü–∏–∫–ª–µ.\n"
        ]
        #return "–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ 5 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –Ω–∞ –≤—ã–±–æ—Ä. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ –æ–¥–Ω–æ–π –∑–∞–ø–∏—Å—å—é:\n\n" + "\n".join(sentences)
        return "–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ 5 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –Ω–∞ –≤—ã–±–æ—Ä. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ –æ–¥–Ω–æ–π –∑–∞–ø–∏—Å—å—é:\n\n" + "\n".join(sentences)


    elif task_number == 2:
        words = [
            "–ß–∞—Å—ã", "–°–æ–±–∞–∫–∞", "–ú—è—á", "–£—Ç—é–≥", "–°–∞–Ω–∫–∏", "–ö–Ω–∏–≥–∞", "–ß–∞–π–Ω–∏–∫", "–ê—Ä–±—É–∑", "–°–∞–º–æ–ª—ë—Ç", "–ö–æ–Ω—Ñ–µ—Ç–∞",
            "–¶—ã–ø–ª—ë–Ω–æ–∫", "–ö–∞—Ä—Ç–æ—à–∫–∞", "–°—Ç–æ–ª", "–ü–ª–∞—Ç—å–µ", "–¢–µ–ª–µ–≤–∏–∑–æ—Ä\n\n"
            "–∏–ª–∏\n\n"
            "–õ—ã–∂–∏", "–ö—É–±–∏–∫–∏", "–Å–∂", "–ü–µ—Ç—É—Ö", "–Æ–±–∫–∞", "–ì—Ä—É—à–∞", "–ü–æ—Ä—Ç—Ñ–µ–ª—å", "–õ—å–≤—ë–Ω–æ–∫", "–ú–æ–ª–æ—Ç–æ–∫", "–¢–∞—Ä–µ–ª–∫–∞",
            "–ö–∞—Ä–∞–Ω–¥–∞—à", "–°–∫–∞–º–µ–π–∫–∞", "–í–æ–ª–∫", "–ö–ª—é—à–∫–∞", "–°–∫–æ–≤–æ—Ä–æ–¥–∞\n"
        ]
        return "–ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ –Ω–∞–±–æ—Ä —Å–ª–æ–≤  –Ω–∞ –≤—ã–±–æ—Ä:\n\n" + ", ".join(words)


    elif task_number == 3:

        sentences = load_sentences_from_file()
        if sentences:
            selected_sentence = random.choice(sentences)
            selected_sentence = " ".join(selected_sentence.split(" ")[1:])
            return f"–ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ –≤—Å–ª—É—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–π –æ—Ç—Ä—ã–≤–æ–∫ —Ç–µ–∫—Å—Ç–∞:\n\n{selected_sentence}"


    elif task_number == 4:
        questions = [
            "–ì–¥–µ –≤–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è –ø—Ä–æ–≤–æ–¥–∏—Ç—å –≤—Ä–µ–º—è?",
            "–ö–∞–∫–∞—è —Å–µ–π—á–∞—Å –ø–æ–≥–æ–¥–∞ –∑–∞ –æ–∫–Ω–æ–º?",
            "–ö–∞–∫ –≤—ã –¥—É–º–∞–µ—Ç–µ, –ø–æ—á–µ–º—É –≤–∞–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –ø—Ä–∏—Ä–æ–¥—É?",
            "–õ—é–±–∏—Ç–µ –ª–∏ –≤—ã –∂–∏–≤–æ—Ç–Ω—ã—Ö –∏ –ø–æ—á–µ–º—É?"
        ]
        return "–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –æ–¥–∏–Ω –≤–æ–ø—Ä–æ—Å –Ω–∞ –≤—ã–±–æ—Ä. –°—Ç–∞—Ä–∞–π—Ç–µ—Å—å —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –ø–æ–¥—Ä–æ–±–Ω–æ:\n\n" + "\n".join(questions)


    elif task_number == 5:
        return "–û–ø–∏—à–∏—Ç–µ –∫–∞—Ä—Ç–∏–Ω—É, –∫–æ—Ç–æ—Ä—É—é –≤–∏–¥–∏—Ç–µ. –ú–æ–∂–µ—Ç–µ —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å—Å—è –∫–∞–∫ –Ω–∞ –¥–µ—Ç–∞–ª—è—Ö, —Ç–∞–∫ –∏ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–µ –≤ —Ü–µ–ª–æ–º."

    elif task_number == 6:
        actions = [
            "–ö–∞–∫ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å —á–∞–π",
            "–ö–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è –¥–æ –±–ª–∏–∂–∞–π—à–µ–π —Å—Ç–∞–Ω—Ü–∏–∏ –º–µ—Ç—Ä–æ",
            "–ö–∞–∫ –ø–æ—á–∏—Å—Ç–∏—Ç—å –∑—É–±—ã",
            "–ö–∞–∫ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –±—É—Ç–µ—Ä–±—Ä–æ–¥"
        ]
        return "–û–ø–∏—à–∏—Ç–µ, –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ–¥–Ω–æ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π –ø–æ —à–∞–≥–∞–º:\n\n" + "\n".join(actions)

    return "–ó–∞–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"

@bot.message_handler(commands=['start'])
def start(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    text = (
        "–ü—Ä–∏–≤–µ—Ç! üëã\n\n"
        "–ú—ã —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–∂–µ—Ç –ª—é–¥—è–º —Å –Ω–∞—Ä—É—à–µ–Ω–∏—è–º–∏ —Ä–µ—á–∏."
        " –î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–º –Ω—É–∂–Ω—ã –≥–æ–ª–æ—Å–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏, —á—Ç–æ–±—ã –æ–±—É—á–∞—Ç—å —Å–∏—Å—Ç–µ–º—ã "
        "—Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏ –∏ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –ø–æ–º–æ—â–Ω–∏–∫–æ–≤.\n\n"
        "–ö–∞–∫ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å? –í—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è (–≤—Å–µ–≥–æ –∏—Ö 6), –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –≥–æ–ª–æ—Å–æ–º. "
        "–ü–æ—Å–ª–µ –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª –º–æ–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–ª–∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∑–∞–¥–∞–Ω–∏—é.\n"
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –≤–∫–ª–∞–¥! üòäÔ∏è\n\n"
        "‚ÑπÔ∏è –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /info\n"
        "üîÑ –ß—Ç–æ–±—ã —Å–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /reset\n"
        "‚ùì –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –æ —Ç–æ–º, –∫–∞–∫ –∑–∞–ø–∏—Å–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help"
    )
    bot.send_message(message.chat.id, text, reply_markup=main_menu)
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start —Å –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    user_id = message.chat.id

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ "–î–∞" –∏ "–ù–µ—Ç"
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("–î–∞"), KeyboardButton("–ù–µ—Ç"))

    bot.send_message(user_id, "–•–æ—Ç–∏—Ç–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º? –û–Ω–∞ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è, –Ω–æ –í—ã –æ—á–µ–Ω—å –ø–æ–º–æ–∂–µ—Ç–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—é ‚ù§Ô∏è" + "\n–û—Ç–≤–µ—Ç—å—Ç–µ –î–∞ –∏–ª–∏ –ù–µ—Ç", reply_markup=markup)
    bot.register_next_step_handler(message, process_survey_choice)

def process_survey_choice(message):
    user_id = message.chat.id
    text = message.text.strip().lower()
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –æ—Ç–¥–µ–ª—å–Ω–æ
    if text.startswith("/"):
        process_command(message)
        bot.register_next_step_handler(message, process_survey_choice)  # –ñ–¥—ë–º "–î–∞" –∏–ª–∏ "–ù–µ—Ç" —Å–Ω–æ–≤–∞
        return
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç "–î–∞" –∏–ª–∏ "–ù–µ—Ç"
    if text == "–¥–∞":
        bot.send_message(user_id, "–ö–∞–∫–æ–π —É –≤–∞—Å –≤–æ–∑—Ä–∞—Å—Ç?", reply_markup=ReplyKeyboardRemove())
        bot.register_next_step_handler(message, process_age)
    elif text == "–Ω–µ—Ç":
        bot.send_message(user_id, "–•–æ—Ä–æ—à–æ, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–¥–∞–Ω–∏—è–º!", reply_markup=ReplyKeyboardRemove())
        start_recording(message)
    else:
        bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ '–î–∞' –∏–ª–∏ '–ù–µ—Ç'.")
        bot.register_next_step_handler(message, process_survey_choice)

def process_command(message):
    user_id = message.chat.id
    text = message.text.lower()
    
    if text == "/info":
        txt1 = (
            "–ú—ã Lab260 - –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞, —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è.\n\n"
            "–°–µ–π—á–∞—Å –º—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –ø—Ä–æ–µ–∫—Ç–æ–º, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –ª—é–¥—è–º —Å –Ω–∞—Ä—É—à–µ–Ω–∏—è–º–∏ —Ä–µ—á–∏. "
            "–ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ –≥–æ–ª–æ—Å–æ–≤—ã–µ –ø–æ–º–æ—â–Ω–∏–∫–∏ –∏ —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è, –Ω–∞–º –Ω—É–∂–µ–Ω —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–π –¥–∞—Ç–∞—Å–µ—Ç –∑–∞–ø–∏—Å–µ–π.\n\n"
            "–ö–∞–∂–¥—ã–π –≥–æ–ª–æ—Å —É–Ω–∏–∫–∞–ª–µ–Ω, –∏ –≤–∞—à–∞ –ø–æ–º–æ—â—å –ø–æ–∑–≤–æ–ª–∏—Ç –Ω–∞–º –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ø–æ–¥ –ª—é–±—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–µ—á–∏.\n\n"
            "–ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å ‚Äî –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Ü–µ–ª—è—Ö.\n\n"
            "–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º: plisssa2002@yandex.ru\n\n"
            "–î–∞–≤–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ —Å–¥–µ–ª–∞–µ–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –¥–ª—è –≤—Å–µ—Ö! üöÄ\n\n"
            "–° —É–≤–∞–∂–µ–Ω–∏–µ–º,\n–ö–æ–º–∞–Ω–¥–∞ Lab260 ‚ù§Ô∏è"
        )
        bot.send_message(user_id, txt1)
    elif text == "/help":
        txt2 = (
            "–ß—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram:\n"
            "1Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ –∏ —É–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –∫–Ω–æ–ø–∫—É –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ –≤–æ–∑–ª–µ —Å—Ç—Ä–æ–∫–∏ –≤–≤–æ–¥–∞ (—Å–ø—Ä–∞–≤–∞ —Å–Ω–∏–∑—É).\n"
            "2Ô∏è‚É£ –ü—Ä–æ–∏–∑–Ω–µ—Å–∏—Ç–µ —Ç–µ–∫—Å—Ç, –∑–∞—Ç–µ–º –æ—Ç–ø—É—Å—Ç–∏—Ç–µ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å.\n"
            "3Ô∏è‚É£ –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∞—Å—å, —Ç–æ –≤—ã —É–≤–∏–¥–∏—Ç–µ –µ–µ –≤ —á–∞—Ç–µ —Å –±–æ—Ç–æ–º.\n\n"
            "–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º..Ô∏è"
        )
        bot.send_message(user_id, txt2)



user_survey = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–Ω–∫–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö

@bot.message_handler(commands=['help'])
def send_help(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /info"""
    help_text = (
        "–ß—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram:\n"
        "1Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ –∏ —É–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –∫–Ω–æ–ø–∫—É –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ –≤–æ–∑–ª–µ —Å—Ç—Ä–æ–∫–∏ –≤–≤–æ–¥–∞ (—Å–ø—Ä–∞–≤–∞ —Å–Ω–∏–∑—É).\n"
        "2Ô∏è‚É£ –ü—Ä–æ–∏–∑–Ω–µ—Å–∏—Ç–µ —Ç–µ–∫—Å—Ç, –∑–∞—Ç–µ–º –æ—Ç–ø—É—Å—Ç–∏—Ç–µ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å.\n"
        "3Ô∏è‚É£ –ï—Å–ª–∏ –∑–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∞—Å—å, —Ç–æ –≤—ã —É–≤–∏–¥–∏—Ç–µ –µ–µ –≤ —á–∞—Ç–µ —Å –±–æ—Ç–æ–º.\n\n"
        "–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º..Ô∏è"
    )
    bot.send_message(message.chat.id, help_text)

@bot.message_handler(commands=['–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å'])
def skip_question(message):
    user_id = message.chat.id

    if user_id in user_survey:
        if "–í–æ–∑—Ä–∞—Å—Ç" not in user_survey[user_id]:
            user_survey[user_id]["–í–æ–∑—Ä–∞—Å—Ç"] = "-"
            bot.send_message(user_id, "–ö–∞–∫–æ–π —É –≤–∞—Å –ø–æ–ª? (–ú/–ñ)",
                             reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton("/–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å")))
            bot.register_next_step_handler(message, process_gender)
            return

        if "–ü–æ–ª" not in user_survey[user_id]:
            user_survey[user_id]["–ü–æ–ª"] = "-"
            bot.send_message(user_id, "–ö–∞–∫–æ–π —É –≤–∞—Å —Ä–æ–¥–Ω–æ–π —è–∑—ã–∫?",
                             reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton("/–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å")))
            bot.register_next_step_handler(message, process_language)
            return

        if "–†–æ–¥–Ω–æ–π —è–∑—ã–∫" not in user_survey[user_id]:
            user_survey[user_id]["–†–æ–¥–Ω–æ–π —è–∑—ã–∫"] = "-"
            bot.send_message(user_id, "–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –Ω–∞—Ä—É—à–µ–Ω–∏—è —Ä–µ—á–∏? (–Ω–∞–ø—Ä–∏–º–µ—Ä: –¥–∏—Å–ª–∞–ª–∏—è, –∑–∞–∏–∫–∞–Ω–∏–µ, –∞—Ñ–∞–∑–∏—è, –¥–∏–∑–∞—Ä—Ç—Ä–∏—è –∏ —Ç. –¥.)",
                             reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton("/–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å")))
            bot.register_next_step_handler(message, process_speech_disorder)
            return

        if "–¢–∏–ø –Ω–∞—Ä—É—à–µ–Ω–∏—è" not in user_survey[user_id]:
            user_survey[user_id]["–¢–∏–ø –Ω–∞—Ä—É—à–µ–Ω–∏—è"] = "-"
            bot.send_message(user_id, "–ö–∞–∫–æ–≤–∞ –ø—Ä–∏—á–∏–Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è? (–≤—Ä–æ–∂–¥—ë–Ω–Ω–æ–µ, –ø—Ä–∏–æ–±—Ä–µ—Ç—ë–Ω–Ω–æ–µ, —Ç—Ä–∞–≤–º–∞, –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–µ –∏ —Ç. –¥.)",
                             reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton("/–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å")))
            bot.register_next_step_handler(message, process_cause)
            return

        if "–ü—Ä–∏—á–∏–Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è" not in user_survey[user_id]:
            user_survey[user_id]["–ü—Ä–∏—á–∏–Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è"] = "-"
            bot.send_message(user_id, "–ü—Ä–æ—Ö–æ–¥–∏—Ç–µ –ª–∏ –ª–µ—á–µ–Ω–∏–µ? (–ª–æ–≥–æ–ø–µ–¥, –Ω–µ–≤—Ä–æ–ª–æ–≥ –∏ —Ç. –¥.)",
                             reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).add(KeyboardButton("/–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å")))
            bot.register_next_step_handler(message, process_treatment)
            return

        if "–ü—Ä–æ—Ö–æ–¥–∏—Ç –ª–∏ –ª–µ—á–µ–Ω–∏–µ" not in user_survey[user_id]:
            user_survey[user_id]["–ü—Ä–æ—Ö–æ–¥–∏—Ç –ª–∏ –ª–µ—á–µ–Ω–∏–µ"] = "-"
            filename = save_survey_to_file(user_id)
            bot.send_message(user_id, "–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –∑–∞–¥–∞–Ω–∏—è–º.",
                             reply_markup=ReplyKeyboardRemove())
            start_recording(message)
            return


def process_age(message):
    user_id = message.chat.id
    user_survey[user_id] = {"–í–æ–∑—Ä–∞—Å—Ç": message.text}

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("/–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å"))

    bot.send_message(user_id, "–ö–∞–∫–æ–π —É –≤–∞—Å –ø–æ–ª? (–ú/–ñ)", reply_markup=markup)
    bot.register_next_step_handler(message, process_gender)

def process_gender(message):
    user_id = message.chat.id
    user_survey[user_id]["–ü–æ–ª"] = message.text
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("/–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å"))


    bot.send_message(user_id, "–ö–∞–∫–æ–π —É –≤–∞—Å —Ä–æ–¥–Ω–æ–π —è–∑—ã–∫?", reply_markup=markup)
    bot.register_next_step_handler(message, process_language)


def process_language(message):
    user_id = message.chat.id
    user_survey[user_id]["–†–æ–¥–Ω–æ–π —è–∑—ã–∫"] = message.text
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("/–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å"))

    bot.send_message(user_id, "–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –Ω–∞—Ä—É—à–µ–Ω–∏—è —Ä–µ—á–∏? (–Ω–∞–ø—Ä–∏–º–µ—Ä: –¥–∏—Å–ª–∞–ª–∏—è, –∑–∞–∏–∫–∞–Ω–∏–µ, –∞—Ñ–∞–∑–∏—è, –¥–∏–∑–∞—Ä—Ç—Ä–∏—è –∏ —Ç. –¥.)", reply_markup=markup)
    bot.register_next_step_handler(message, process_speech_disorder)


def process_speech_disorder(message):
    user_id = message.chat.id
    user_survey[user_id]["–¢–∏–ø –Ω–∞—Ä—É—à–µ–Ω–∏—è"] = message.text
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("/–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å"))

    bot.send_message(user_id, "–ö–∞–∫–æ–≤–∞ –ø—Ä–∏—á–∏–Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è? (–≤—Ä–æ–∂–¥—ë–Ω–Ω–æ–µ, –ø—Ä–∏–æ–±—Ä–µ—Ç—ë–Ω–Ω–æ–µ, —Ç—Ä–∞–≤–º–∞, –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–µ –∏ —Ç. –¥.)", reply_markup=markup)
    bot.register_next_step_handler(message, process_cause)


def process_cause(message):
    user_id = message.chat.id
    user_survey[user_id]["–ü—Ä–∏—á–∏–Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è"] = message.text
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("/–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å"))

    bot.send_message(user_id, "–ü—Ä–æ—Ö–æ–¥–∏—Ç–µ –ª–∏ –ª–µ—á–µ–Ω–∏–µ? (–ª–æ–≥–æ–ø–µ–¥, –Ω–µ–≤—Ä–æ–ª–æ–≥ –∏ —Ç. –¥.)", reply_markup=markup)
    bot.register_next_step_handler(message, process_treatment)

def process_treatment(message):
    user_id = message.chat.id
    user_survey[user_id]["–ü—Ä–æ—Ö–æ–¥–∏—Ç –ª–∏ –ª–µ—á–µ–Ω–∏–µ"] = message.text

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∞–Ω–∫–µ—Ç—ã
    survey_text = f"üìù –ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞ {user_id}\n\n"
    for key, value in user_survey[user_id].items():
        survey_text += f"{key}: {value}\n"

    # ID Telegram-–∫–∞–Ω–∞–ª–∞ (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π)
    CHANNEL_ID = "@bot_260"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–Ω–∫–µ—Ç—É –≤ –∫–∞–Ω–∞–ª
    bot.send_message(CHANNEL_ID, survey_text)

    bot.send_message(user_id, "–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –∑–∞–¥–∞–Ω–∏—è–º.", reply_markup=ReplyKeyboardRemove())
    start_recording(message)



def save_survey_to_file(user_id):
    directory = "/Users/elizavetapuzyreva/Desktop/bot/voice_form"
    if not os.path.exists(directory):
        os.makedirs(directory)  # –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç

    filename = os.path.join(directory, f"{user_id}_survey.txt")
    version = 1
    while os.path.exists(filename):
        version += 1
        filename = os.path.join(directory, f"{user_id}_survey_v{version}.txt")

    with open(filename, "w", encoding="utf-8") as file:
        for key, value in user_survey[user_id].items():
            file.write(f"{key}: {value}\n")

    return filename  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É

@bot.message_handler(commands=['info'])
def info(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /info"""
    text = (
        "–ú—ã Lab260 - –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞, —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è.\n\n"
        "–°–µ–π—á–∞—Å –º—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –ø—Ä–æ–µ–∫—Ç–æ–º, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –ª—é–¥—è–º —Å –Ω–∞—Ä—É—à–µ–Ω–∏—è–º–∏ —Ä–µ—á–∏. "
        "–ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ –≥–æ–ª–æ—Å–æ–≤—ã–µ –ø–æ–º–æ—â–Ω–∏–∫–∏ –∏ —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è, –Ω–∞–º –Ω—É–∂–µ–Ω —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–π –¥–∞—Ç–∞—Å–µ—Ç –∑–∞–ø–∏—Å–µ–π.\n\n"
        "–ö–∞–∂–¥—ã–π –≥–æ–ª–æ—Å —É–Ω–∏–∫–∞–ª–µ–Ω, –∏ –≤–∞—à–∞ –ø–æ–º–æ—â—å –ø–æ–∑–≤–æ–ª–∏—Ç –Ω–∞–º –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ø–æ–¥ –ª—é–±—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–µ—á–∏.\n\n"
        "–ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å ‚Äî –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Ü–µ–ª—è—Ö.\n\n"
        "–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º: plisssa2002@yandex.ru\n\n"
        "–î–∞–≤–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ —Å–¥–µ–ª–∞–µ–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –¥–ª—è –≤—Å–µ—Ö! üöÄ\n\n"
        "–° —É–≤–∞–∂–µ–Ω–∏–µ–º,\n"
        "–ö–æ–º–∞–Ω–¥–∞ Lab260 ‚ù§Ô∏è"
    )
    bot.send_message(message.chat.id, text)

@bot.message_handler(commands=['reset'])
def reset_command(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /reset"""
    user_id = message.chat.id

    # –û—á–∏—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_id in user_records:
        user_records[user_id] = []
    if user_id in user_last_voice:
        user_last_voice[user_id] = []
    if user_id in user_current_task:
        user_current_task[user_id] = 1
    if user_id in user_waiting_for_action:
        user_waiting_for_action[user_id] = False

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –Ω–∞—á–∞–ª—É
    bot.send_message(user_id, "üîÑ –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–±—Ä–æ—à–µ–Ω–æ. –ù–∞–∂–º–∏—Ç–µ '–ù–∞—á–∞—Ç—å', —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.", reply_markup=main_menu)

@bot.message_handler(func=lambda message: message.text == "–ù–∞—á–∞—Ç—å")
def start_recording(message):
    """–ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø–∏—Å–∏"""
    user_id = message.chat.id
    user_current_task[user_id] = 1  # –ù–∞—á–∏–Ω–∞–µ–º —Å –ø–µ—Ä–≤–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è
    user_waiting_for_action[user_id] = False  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è

    # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∑–∞–ø–∏—Å–∏
    if user_id in user_records:
        user_records[user_id] = []
    if user_id in user_last_voice:
        user_last_voice[user_id] = []

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ
    send_task(user_id)


def send_task(user_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    task_number = user_current_task[user_id]

    if task_number == 5:
        image_path, image_name = get_random_image()

        if image_path:
            with open(image_path, "rb") as image_file:
                bot.send_photo(user_id, image_file,
                               caption=f"–û–ø–∏—à–∏—Ç–µ –∫–∞—Ä—Ç–∏–Ω—É, –∫–æ—Ç–æ—Ä—É—é –≤–∏–¥–∏—Ç–µ. –ú–æ–∂–µ—Ç–µ —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å—Å—è –∫–∞–∫ –Ω–∞ –¥–µ—Ç–∞–ª—è—Ö, —Ç–∞–∫ –∏ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–µ –≤ —Ü–µ–ª–æ–º.\n\n–ü–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è:\n–ß—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–æ –Ω–∞ –ø–µ—Ä–µ–¥–Ω–µ–º –ø–ª–∞–Ω–µ, –∞ —á—Ç–æ –Ω–∞ –∑–∞–¥–Ω–µ–º?\n–ö–∞–∫–∏–µ –æ–±—ä–µ–∫—Ç—ã –∏–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ –ø—Ä–∏–≤–ª–µ–∫–∞—é—Ç –≤–Ω–∏–º–∞–Ω–∏–µ –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å?\n–ö–∞–∫–æ–π –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—è —ç—Ç–æ–π —Å—Ü–µ–Ω—ã?\n–ö–∞–∫–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —Å–æ–∑–¥–∞—ë—Ç –∫–∞—Ä—Ç–∏–Ω–∞?\n\n–ù–∞–∑–≤–∞–Ω–∏–µ: {image_name}")
        else:
            bot.send_message(user_id, "‚ö†Ô∏è –í –ø–∞–ø–∫–µ Image –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.")
        return

    text_for_recording = get_text_for_user(task_number)

    if text_for_recording == "–ó–∞–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!":
        bot.send_message(user_id, "‚úÖ –í—Å–µ –∑–∞–¥–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã! –ù–∞–∂–º–∏—Ç–µ '–ù–∞—á–∞—Ç—å', —á—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏ –∑–∞–Ω–æ–≤–æ.",
                         reply_markup=main_menu)
        return

    msg = bot.send_message(
        user_id,
        f"–í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ {task_number}. \n\n{text_for_recording}\n\nüì¢ –ó–∞–ø–∏—à–∏—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ —Å—é–¥–∞.",
        reply_markup=ReplyKeyboardRemove()
    )
    user_last_message[user_id] = msg.message_id


@bot.message_handler(content_types=['voice'])
def save_voice(message):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ"""
    user_id = message.chat.id
    CHANNEL_ID = "@bot_260"  # –£–∫–∞–∂–∏—Ç–µ –≤–∞—à Telegram-–∫–∞–Ω–∞–ª

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–¥–∞–Ω–∏–µ
    if user_id not in user_current_task:
        bot.send_message(user_id, "‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ '–ù–∞—á–∞—Ç—å', —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏!")
        return

    # –ï—Å–ª–∏ –±–æ—Ç –æ–∂–∏–¥–∞–µ—Ç –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è ‚Äî —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥
    if user_waiting_for_action.get(user_id, False):
        user_waiting_for_action[user_id] = False  # –°–±—Ä–æ—Å —Ñ–ª–∞–≥–∞ –æ–∂–∏–¥–∞–Ω–∏—è

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    file_id = message.voice.file_id
    user_records.setdefault(user_id, []).append(file_id)

    # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.send_message(user_id, "‚úÖ –ó–∞–ø–∏—Å—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –ª–∏ –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è
    if user_current_task[user_id] >= 6:
        bot.send_message(user_id, "–í—ã –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è! "
                                  "–ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É 'üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å—ë –∏ –∑–∞–∫–æ–Ω—á–∏—Ç—å'.")

    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥–µ–π—Å—Ç–≤–∏—è
    task_number = user_current_task[user_id]
    menu = get_action_menu(task_number)
    msg = bot.send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=menu)
    user_last_message[user_id] = msg.message_id

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
    user_waiting_for_action[user_id] = True


@bot.callback_query_handler(func=lambda call: call.data == "next_task")
def next_task(call):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∑–∞–¥–∞–Ω–∏–µ–º"""
    user_id = call.message.chat.id
    chat_id = "@bot_260"

    # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –∞—É–¥–∏–æ ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
    if user_id in user_records and user_records[user_id]:
        bot.send_message(user_id, "üì§ –ü–æ–¥–æ–∂–¥–∏—Ç–µ ...")

        for file_id in user_records[user_id]:
            bot.send_voice(chat_id, file_id, caption=f"üÜî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_id}")

        # –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–ø–∏—Å–µ–π –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
        user_records[user_id] = []

    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é
    try:
        bot.delete_message(user_id, call.message.message_id)
    except Exception:
        pass

    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∑–∞–¥–∞–Ω–∏—é
    user_current_task[user_id] += 1
    send_task(user_id)


@bot.callback_query_handler(func=lambda call: call.data == "re_record")
def re_record(call):
    """–ü–µ—Ä–µ–∑–∞–ø–∏—Å—å —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è"""
    user_id = call.message.chat.id

    # –£–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–ø–∏—Å—å
    if user_id in user_records and user_records[user_id]:
        user_records[user_id].pop()

    # –£–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if user_id in user_last_voice and user_last_voice[user_id]:
        last_voice_id = user_last_voice[user_id].pop()
        try:
            bot.delete_message(user_id, last_voice_id)
        except Exception:
            pass

    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é
    try:
        bot.delete_message(user_id, call.message.message_id)
    except Exception:
        pass

    # –ü–æ–≤—Ç–æ—Ä–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ
    user_waiting_for_action[user_id] = False
    send_task(user_id)

@bot.callback_query_handler(func=lambda call: call.data == "send")
def send_recording(call):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π"""
    user_id = call.message.chat.id
    chat_id = "@bot_260"

    if user_id in user_records and user_records[user_id]:
        bot.send_message(user_id, "‚è≥ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∞—à–∏ –∑–∞–ø–∏—Å–∏...")
        # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –∞—É–¥–∏–æ ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
        if user_id in user_records and user_records[user_id]:
            bot.send_message(user_id, "üì§ –ü–æ–¥–æ–∂–¥–∏—Ç–µ ...")

            for file_id in user_records[user_id]:
                bot.send_voice(chat_id, file_id, caption=f"üÜî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_id}")

        bot.send_message(user_id, f"‚úÖ –í—Å–µ –∑–∞–ø–∏—Å–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")

        # –û—á–∏—â–∞–µ–º –∑–∞–ø–∏—Å–∏
        user_records[user_id] = []
        user_last_voice[user_id] = []
        user_current_task[user_id] = 1
        user_waiting_for_action[user_id] = False

    else:
        bot.send_message(user_id, "‚ö†Ô∏è –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.")

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞—á–∞—Ç—å"
    bot.send_message(user_id, "–ù–∞–∂–º–∏—Ç–µ /start, —á—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç.")

@bot.callback_query_handler(func=lambda call: call.data == "reset")
def reset(call):
    """–°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id = call.message.chat.id

    # –û—á–∏—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_id in user_records:
        user_records[user_id] = []
    if user_id in user_last_voice:
        user_last_voice[user_id] = []
    if user_id in user_current_task:
        user_current_task[user_id] = 1
    if user_id in user_waiting_for_action:
        user_waiting_for_action[user_id] = False

    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –º–µ–Ω—é
    try:
        bot.delete_message(user_id, call.message.message_id)
    except Exception:
        pass

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –Ω–∞—á–∞–ª—É
    bot.send_message(user_id, "üîÑ –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–±—Ä–æ—à–µ–Ω–æ. –ù–∞–∂–º–∏—Ç–µ '–ù–∞—á–∞—Ç—å', —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.", reply_markup=main_menu)

def get_action_menu(task_number):
    """–°–æ–∑–¥–∞–µ—Ç –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π —Å —É—á–µ—Ç–æ–º –Ω–æ–º–µ—Ä–∞ –∑–∞–¥–∞–Ω–∏—è"""
    menu = InlineKeyboardMarkup()
    menu.add(InlineKeyboardButton("üîÑ –ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å", callback_data="re_record"))

    if get_text_for_user(task_number + 1) != "–ó–∞–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!":
        menu.add(InlineKeyboardButton("‚û°Ô∏è –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∑–∞–¥–∞–Ω–∏—é", callback_data="next_task"))

    menu.add(InlineKeyboardButton("üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å—ë –∏ –∑–∞–∫–æ–Ω—á–∏—Ç—å", callback_data="send"))
    menu.add(InlineKeyboardButton("üîÑ –°–±—Ä–æ—Å", callback_data="reset"))  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–°–±—Ä–æ—Å"
    return menu

def get_unique_filename(user_id, index):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞"""
    version = 1
    file_path = os.path.join(SAVE_PATH, f"voice_{user_id}_{index}.ogg")

    while os.path.exists(file_path):
        version += 1
        file_path = os.path.join(SAVE_PATH, f"voice_{user_id}_{index}_{version}.ogg")

    return file_path


def get_random_image():
    """–í—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –ø–∞–ø–∫–∏ Image –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è"""
    image_folder = "Image"
    images = [f for f in os.listdir(image_folder) if f.endswith(".jpg")]

    if not images:
        return None, None

    random_image = random.choice(images)
    image_path = os.path.join(image_folder, random_image)
    image_name = os.path.splitext(random_image)[0]  # –£–±–∏—Ä–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ

    return image_path, image_name

@bot.message_handler(func=lambda message: message.text in ["–î–∞", "–ù–µ—Ç"])
def handle_survey_choice(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id = message.chat.id

    if message.text == "–î–∞":
        bot.send_message(user_id, "–û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º.")
        ask_next_question(user_id, 0)  # –ù–∞—á–∏–Ω–∞–µ–º —Å –ø–µ—Ä–≤–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
    else:
        bot.send_message(user_id, "–•–æ—Ä–æ—à–æ, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–¥–∞–Ω–∏—è–º.", reply_markup=ReplyKeyboardRemove())
        send_task(user_id)  # –ü–µ—Ä–µ—Ö–æ–¥ –∫ –∑–∞–¥–∞–Ω–∏—è–º
        
@bot.callback_query_handler(func=lambda call: call.data in ["next_task", "send"])
def process_task_action(call):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –¥–µ–π—Å—Ç–≤–∏—è –ø–æ—Å–ª–µ –≥–æ–ª–æ—Å–æ–≤–æ–π –∑–∞–ø–∏—Å–∏"""
    user_id = call.message.chat.id

    if call.data == "send":  # –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—É—â—É—é –∑–∞–ø–∏—Å—å –∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å
        if user_id in user_records and user_records[user_id]:
            last_voice_id = user_records[user_id][-1]  # –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–ø–∏—Å—å
            bot.send_voice(user_id, last_voice_id)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é

        bot.send_message(user_id, "‚úÖ –í–∞—à–∏ –∑–∞–ø–∏—Å–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã! –°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ!", reply_markup=main_menu)
        user_records[user_id] = []  # –û—á–∏—â–∞–µ–º –∑–∞–ø–∏—Å–∏ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
        return

    if call.data == "next_task":  # –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∑–∞–¥–∞–Ω–∏—é
        user_current_task[user_id] += 1  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä –∑–∞–¥–∞–Ω–∏—è
        send_task(user_id)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ


if __name__ == "__main__":
    bot.infinity_polling()
